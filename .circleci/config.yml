version: 2.1 # use CircleCI 2.1

orbs:
  docker: circleci/docker@1.0.1
  kube-orb: circleci/kubernetes@0.11.0
  go: circleci/go@1.7.1

parameters:
  ci_service_controller_image:
    default: quay.io/skupper/service-controller:${CIRCLE_SHA1}
    type: string

  ci_site_controller_image:
    default: quay.io/skupper/site-controller:${CIRCLE_SHA1}
    type: string

  ci_config_sync_image:
    default: quay.io/skupper/config-sync:${CIRCLE_SHA1}
    type: string

  ci_vflow_collector_image:
    default: quay.io/skupper/vflow-collector:${CIRCLE_SHA1}
    type: string

  ci_test_image:
    default: quay.io/skupper/skupper-tests:${CIRCLE_SHA1}
    type: string

jobs: # basic units of work in a run
  registry:
    executor: rena-executor
    steps:
      - run:
          name: run image registry
          command: |
            sudo mkdir -p /etc/apt/keyrings

            # configure docker for the insecure registry
            sudo sh -c 'echo "{ \"insecure-registries\":[\"0.0.0.0:5000\"] }" >> /etc/docker/daemon.json'
            sudo systemctl restart docker

            # Run the registry
            docker run -d -p 5000:5000 --name registry registry

            # pull images from quay
            docker pull quay.io/skupper/skupper-router:latest
            docker pull quay.io/skupper/service-controller:master
            docker pull quay.io/skupper/config-sync:master
            docker pull quay.io/skupper/vflow-collector:master
            docker pull quay.io/skupper/site-controller:master

            # tag images for local registry
            docker tag quay.io/skupper/skupper-router:latest 0.0.0.0:5000/skupper-router:latest
            docker tag quay.io/skupper/service-controller:master 0.0.0.0:5000/service-controller:master
            docker tag quay.io/skupper/config-sync:master 0.0.0.0:5000/config-sync:master
            docker tag quay.io/skupper/vflow-collector:master 0.0.0.0:5000/vflow-collector:master
            docker tag quay.io/skupper/site-controller:master 0.0.0.0:5000/site-controller:master

            # push images
            docker push 0.0.0.0:5000/skupper-router:latest
            docker push 0.0.0.0:5000/service-controller:master
            docker push 0.0.0.0:5000/site-controller:master
            docker push 0.0.0.0:5000/config-sync:master
            docker push 0.0.0.0:5000/vflow-collector:master

            # Update OS and install ifconfig
            sudo apt update
            sudo apt install net-tools

      - minikube-install
      - minikube-start-medium-with-registry
      - prepare_for_local_cluster_tests

commands:
  minikube-install:
    description: Installs the minikube executable onto the system.
    steps:
      - run:
          command: >-
            curl -Lo minikube
            https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 &&
            chmod +x minikube && sudo
            mv minikube /usr/local/bin/
          name: Install Minikube Executable

  minikube-start-medium-with-registry:
    description: Starts the minikube service, with 2 CPU and 2 GiB and with insecure registry
    steps:
      - run:
          command: |
            export REGISTRY_IP_MINIKUBE=`docker info | grep "ip-" | cut -d " " -f 3 | awk -F "-" '{print $2"."$3"."$4"."$5}'`
            echo "RegistryIP = ${REGISTRY_IP_MINIKUBE}"
            minikube start --vm-driver=docker --cpus 2 --memory 2048 --insecure-registry ${REGISTRY_IP_MINIKUBE}:5000
          name: Start Minikube Cluster

  prepare_for_local_cluster_tests:
    description: install right versions of go, docker, kubectl, and also build
    steps:
      - run:
          name: Export environment variables persistent in execution shell
          command: |
            echo 'export KUBECONFIG=/home/circleci/.kube/config' >> $BASH_ENV
            echo 'export GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOROOT/bin:$PATH' >> $BASH_ENV
            echo 'export SKUPPER_SERVICE_CONTROLLER_IMAGE=<< pipeline.parameters.ci_service_controller_image >>' >> $BASH_ENV
            echo 'export SKUPPER_SITE_CONTROLLER_IMAGE=<< pipeline.parameters.ci_site_controller_image >>' >> $BASH_ENV
            echo 'export SKUPPER_CONFIG_SYNC_IMAGE=<< pipeline.parameters.ci_config_sync_image >>' >> $BASH_ENV
            echo 'export SKUPPER_VFLOW_COLLECTOR_IMAGE=<< pipeline.parameters.ci_vflow_collector_image >>' >> $BASH_ENV
            echo 'export TEST_IMAGE=<< pipeline.parameters.ci_test_image >>' >> $BASH_ENV
            source $BASH_ENV
      - checkout
      - run:
          name: cleanup previous go installation
          command: sudo rm -rf /usr/local/go
      - docker/install-docker
      - go/install
      - kube-orb/install-kubectl
      - run: make generate-client
      - run: make

executors:
  rena-executor:
    machine:
      image: ubuntu-2004:current
      resource_class: medium

workflows:
  version: 2
  build-workflow:
    jobs:
      - registry
